#include <stdint.h>
#include "matrix.h"


int64_t matrix_X_0_0_0_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 383, 331, 173, 359, 223, 331, 373, 337, 257, 127, 397};
void generate_X_0_0_0_0_0_0(int64_t result[])
{
	int64_t value = 107;
	matrix_intsum(matrix_X_0_0_0_0_0_0_0, value, result);
}

void generate_X_0_0_0_0_0(int64_t result[])
{
	int64_t matrix_X_0_0_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_0_0_0(matrix_X_0_0_0_0_0_0);
	int64_t value = 457;
	matrix_intmul(matrix_X_0_0_0_0_0_0, value, result);
}

int64_t matrix_X_0_0_0_0_1_0_0[MATRIX_SIZE * MATRIX_SIZE] = {457, 499, 331, 347, 307, 467, 137, 487, 223, 311, 457, 461, 499, 163, 191, 433, 337, 107, 223, 251, 163, 227, 359, 223, 251, 431, 151, 331, 223, 359, 457, 227, 149, 263, 307, 347, 419, 173, 347, 131, 191, 293, 137, 487, 421, 479, 449, 211, 439};
int64_t matrix_X_0_0_0_0_1_0_1[MATRIX_SIZE * MATRIX_SIZE] = {449, 293, 223, 239, 163, 191, 131, 331, 223, 163, 241, 307, 283, 227, 467, 283, 457, 359, 271, 269, 347, 347, 131, 389, 367, 397, 421, 353, 109, 409, 181, 293, 359, 251, 227, 227, 461, 331, 229, 211, 373, 281, 157, 359, 439, 241, 131, 409, 149};
void generate_X_0_0_0_0_1_0(int64_t result[])
{
	matrix_mod(matrix_X_0_0_0_0_1_0_0, matrix_X_0_0_0_0_1_0_1, result);
}

void generate_X_0_0_0_0_1(int64_t result[])
{
	int64_t matrix_X_0_0_0_0_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_0_1_0(matrix_X_0_0_0_0_1_0);
	matrix_transpose(matrix_X_0_0_0_0_1_0, result);
}

void generate_X_0_0_0_0(int64_t result[])
{
	int64_t matrix_X_0_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_0_0(matrix_X_0_0_0_0_0);
	int64_t matrix_X_0_0_0_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_0_1(matrix_X_0_0_0_0_1);
	matrix_mul(matrix_X_0_0_0_0_0, matrix_X_0_0_0_0_1, result);
}

int64_t matrix_X_0_0_0_1_0_0_0[MATRIX_SIZE * MATRIX_SIZE] = {157, 449, 251, 457, 487, 331, 139, 379, 107, 239, 383, 251, 467, 431, 223, 431, 397, 337, 271, 223, 293, 487, 227, 337, 353, 179, 409, 223, 419, 149, 191, 349, 479, 281, 449, 379, 479, 503, 199, 331, 367, 191, 293, 457, 487, 127, 127, 251, 409};
int64_t matrix_X_0_0_0_1_0_0_1[MATRIX_SIZE * MATRIX_SIZE] = {127, 197, 359, 347, 487, 439, 113, 401, 359, 113, 479, 281, 479, 463, 107, 397, 197, 337, 389, 173, 211, 331, 307, 373, 229, 131, 337, 307, 401, 293, 421, 307, 191, 449, 223, 263, 197, 149, 373, 263, 127, 307, 293, 499, 223, 331, 179, 431, 227};
void generate_X_0_0_0_1_0_0(int64_t result[])
{
	matrix_mod(matrix_X_0_0_0_1_0_0_0, matrix_X_0_0_0_1_0_0_1, result);
}

int64_t matrix_X_0_0_0_1_0_1_0[MATRIX_SIZE * MATRIX_SIZE] = {379, 373, 401, 419, 257, 337, 367, 131, 409, 349, 223, 419, 251, 409, 461, 409, 163, 439, 269, 277, 499, 409, 307, 257, 157, 337, 127, 263, 151, 419, 277, 431, 503, 191, 257, 127, 397, 443, 277, 431, 457, 467, 137, 331, 227, 439, 167, 397, 463};
void generate_X_0_0_0_1_0_1(int64_t result[])
{
	int64_t value = 211;
	matrix_intxor(matrix_X_0_0_0_1_0_1_0, value, result);
}

void generate_X_0_0_0_1_0(int64_t result[])
{
	int64_t matrix_X_0_0_0_1_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_1_0_0(matrix_X_0_0_0_1_0_0);
	int64_t matrix_X_0_0_0_1_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_1_0_1(matrix_X_0_0_0_1_0_1);
	matrix_xor(matrix_X_0_0_0_1_0_0, matrix_X_0_0_0_1_0_1, result);
}

int64_t matrix_X_0_0_0_1_1_0_0[MATRIX_SIZE * MATRIX_SIZE] = {431, 127, 127, 131, 251, 251, 431, 173, 367, 457, 419, 311, 283, 131, 281, 157, 239, 227, 233, 257, 257, 211, 277, 127, 277, 191, 479, 457, 223, 251, 331, 331, 223, 113, 271, 191, 193, 337, 191, 317, 443, 127, 373, 401, 443, 293, 137, 431, 211};
void generate_X_0_0_0_1_1_0(int64_t result[])
{
	matrix_transpose(matrix_X_0_0_0_1_1_0_0, result);
}

int64_t matrix_X_0_0_0_1_1_1_0[MATRIX_SIZE * MATRIX_SIZE] = {257, 167, 131, 167, 487, 127, 367, 293, 307, 419, 499, 457, 419, 257, 463, 211, 449, 379, 439, 443, 431, 251, 293, 211, 337, 127, 491, 467, 263, 397, 317, 479, 157, 461, 227, 443, 487, 379, 431, 479, 409, 223, 421, 269, 457, 487, 283, 409, 389};
void generate_X_0_0_0_1_1_1(int64_t result[])
{
	int64_t value = 211;
	matrix_intmod(matrix_X_0_0_0_1_1_1_0, value, result);
}

void generate_X_0_0_0_1_1(int64_t result[])
{
	int64_t matrix_X_0_0_0_1_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_1_1_0(matrix_X_0_0_0_1_1_0);
	int64_t matrix_X_0_0_0_1_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_1_1_1(matrix_X_0_0_0_1_1_1);
	matrix_mul(matrix_X_0_0_0_1_1_0, matrix_X_0_0_0_1_1_1, result);
}

void generate_X_0_0_0_1(int64_t result[])
{
	int64_t matrix_X_0_0_0_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_1_0(matrix_X_0_0_0_1_0);
	int64_t matrix_X_0_0_0_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_1_1(matrix_X_0_0_0_1_1);
	matrix_mod(matrix_X_0_0_0_1_0, matrix_X_0_0_0_1_1, result);
}

void generate_X_0_0_0(int64_t result[])
{
	int64_t matrix_X_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_0(matrix_X_0_0_0_0);
	int64_t matrix_X_0_0_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0_1(matrix_X_0_0_0_1);
	matrix_mul(matrix_X_0_0_0_0, matrix_X_0_0_0_1, result);
}

int64_t matrix_X_0_0_1_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE] = {173, 109, 331, 229, 251, 131, 131, 367, 263, 163, 379, 331, 359, 443, 113, 137, 251, 331, 307, 347, 461, 149, 487, 499, 449, 499, 331, 179, 397, 149, 491, 431, 419, 311, 181, 269, 223, 281, 127, 211, 311, 251, 307, 499, 479, 263, 107, 127, 353};
void generate_X_0_0_1_0_0_0(int64_t result[])
{
	int64_t value = 307;
	matrix_intxor(matrix_X_0_0_1_0_0_0_0, value, result);
}

void generate_X_0_0_1_0_0(int64_t result[])
{
	int64_t matrix_X_0_0_1_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_1_0_0_0(matrix_X_0_0_1_0_0_0);
	int64_t value = 389;
	matrix_intmod(matrix_X_0_0_1_0_0_0, value, result);
}

int64_t matrix_X_0_0_1_0_1_0_0[MATRIX_SIZE * MATRIX_SIZE] = {397, 401, 379, 457, 157, 467, 311, 307, 443, 127, 269, 157, 211, 239, 419, 191, 337, 179, 127, 167, 223, 167, 257, 127, 479, 317, 239, 109, 173, 307, 337, 271, 389, 223, 211, 197, 461, 199, 307, 107, 131, 277, 173, 313, 461, 251, 293, 127, 457};
int64_t matrix_X_0_0_1_0_1_0_1[MATRIX_SIZE * MATRIX_SIZE] = {479, 233, 457, 113, 229, 457, 107, 359, 439, 419, 223, 449, 379, 397, 223, 127, 431, 449, 331, 163, 251, 331, 211, 173, 211, 211, 269, 331, 419, 419, 367, 439, 431, 127, 239, 439, 179, 487, 389, 251, 167, 311, 229, 223, 103, 449, 293, 367, 149};
void generate_X_0_0_1_0_1_0(int64_t result[])
{
	matrix_mod(matrix_X_0_0_1_0_1_0_0, matrix_X_0_0_1_0_1_0_1, result);
}

int64_t matrix_X_0_0_1_0_1_1_0[MATRIX_SIZE * MATRIX_SIZE] = {491, 421, 113, 179, 479, 439, 257, 331, 211, 251, 433, 179, 127, 367, 191, 431, 397, 149, 463, 479, 137, 131, 419, 127, 479, 223, 479, 389, 487, 307, 223, 149, 277, 439, 271, 293, 107, 419, 487, 271, 307, 419, 127, 317, 307, 487, 127, 347, 127};
int64_t matrix_X_0_0_1_0_1_1_1[MATRIX_SIZE * MATRIX_SIZE] = {239, 233, 251, 419, 379, 389, 127, 349, 491, 211, 311, 401, 257, 233, 181, 367, 127, 409, 353, 293, 491, 373, 137, 283, 373, 211, 367, 307, 257, 191, 281, 293, 433, 223, 257, 499, 431, 367, 163, 227, 179, 397, 307, 149, 383, 367, 251, 157, 131};
void generate_X_0_0_1_0_1_1(int64_t result[])
{
	int64_t value = 127;
	matrix_intmodmul(matrix_X_0_0_1_0_1_1_0, matrix_X_0_0_1_0_1_1_1, value, result);
}

void generate_X_0_0_1_0_1(int64_t result[])
{
	int64_t matrix_X_0_0_1_0_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_1_0_1_0(matrix_X_0_0_1_0_1_0);
	int64_t matrix_X_0_0_1_0_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_1_0_1_1(matrix_X_0_0_1_0_1_1);
	matrix_mul(matrix_X_0_0_1_0_1_0, matrix_X_0_0_1_0_1_1, result);
}

void generate_X_0_0_1_0(int64_t result[])
{
	int64_t matrix_X_0_0_1_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_1_0_0(matrix_X_0_0_1_0_0);
	int64_t matrix_X_0_0_1_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_1_0_1(matrix_X_0_0_1_0_1);
	matrix_mul(matrix_X_0_0_1_0_0, matrix_X_0_0_1_0_1, result);
}

void generate_X_0_0_1(int64_t result[])
{
	int64_t matrix_X_0_0_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_1_0(matrix_X_0_0_1_0);
	int64_t value = 331;
	matrix_intmod(matrix_X_0_0_1_0, value, result);
}

void generate_X_0_0(int64_t result[])
{
	int64_t matrix_X_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_0(matrix_X_0_0_0);
	int64_t matrix_X_0_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0_1(matrix_X_0_0_1);
	matrix_mul(matrix_X_0_0_0, matrix_X_0_0_1, result);
}

int64_t matrix_X_0_1_0_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE] = {457, 103, 149, 449, 313, 479, 149, 409, 379, 307, 127, 499, 311, 431, 281, 347, 229, 367, 379, 457, 389, 127, 307, 397, 349, 211, 401, 359, 281, 331, 383, 293, 211, 269, 139, 251, 127, 353, 277, 257, 373, 419, 347, 241, 317, 487, 163, 419, 223};
void generate_X_0_1_0_0_0_0(int64_t result[])
{
	int64_t value = 269;
	matrix_intmod(matrix_X_0_1_0_0_0_0_0, value, result);
}

int64_t matrix_X_0_1_0_0_0_1_0[MATRIX_SIZE * MATRIX_SIZE] = {467, 337, 487, 389, 479, 331, 467, 103, 233, 419, 257, 367, 223, 227, 293, 223, 349, 367, 211, 379, 331, 271, 347, 251, 431, 307, 191, 151, 337, 307, 257, 251, 167, 383, 127, 113, 487, 307, 277, 487, 311, 167, 127, 419, 331, 173, 263, 353, 179};
void generate_X_0_1_0_0_0_1(int64_t result[])
{
	int64_t value = 397;
	matrix_intmod(matrix_X_0_1_0_0_0_1_0, value, result);
}

void generate_X_0_1_0_0_0(int64_t result[])
{
	int64_t matrix_X_0_1_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_0_0_0(matrix_X_0_1_0_0_0_0);
	int64_t matrix_X_0_1_0_0_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_0_0_1(matrix_X_0_1_0_0_0_1);
	int64_t value = 239;
	matrix_intmodmul(matrix_X_0_1_0_0_0_0, matrix_X_0_1_0_0_0_1, value, result);
}

void generate_X_0_1_0_0(int64_t result[])
{
	int64_t matrix_X_0_1_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_0_0(matrix_X_0_1_0_0_0);
	int64_t value = 389;
	matrix_intmul(matrix_X_0_1_0_0_0, value, result);
}

int64_t matrix_X_0_1_0_1_0_0_0[MATRIX_SIZE * MATRIX_SIZE] = {479, 127, 251, 283, 347, 499, 223, 439, 311, 223, 443, 191, 157, 167, 307, 251, 419, 389, 271, 419, 311, 179, 239, 127, 277, 457, 419, 487, 401, 331, 197, 257, 163, 293, 401, 401, 397, 461, 337, 223, 293, 277, 409, 307, 157, 467, 163, 269, 257};
int64_t matrix_X_0_1_0_1_0_0_1[MATRIX_SIZE * MATRIX_SIZE] = {149, 173, 491, 293, 167, 347, 401, 269, 293, 397, 331, 307, 233, 449, 131, 457, 223, 283, 167, 439, 251, 307, 487, 479, 127, 479, 113, 379, 173, 331, 149, 191, 317, 167, 113, 179, 313, 127, 107, 197, 109, 179, 211, 457, 157, 127, 479, 233, 293};
void generate_X_0_1_0_1_0_0(int64_t result[])
{
	matrix_mul(matrix_X_0_1_0_1_0_0_0, matrix_X_0_1_0_1_0_0_1, result);
}

void generate_X_0_1_0_1_0(int64_t result[])
{
	int64_t matrix_X_0_1_0_1_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_1_0_0(matrix_X_0_1_0_1_0_0);
	int64_t value = 307;
	matrix_intmul(matrix_X_0_1_0_1_0_0, value, result);
}

int64_t matrix_X_0_1_0_1_1_0_0[MATRIX_SIZE * MATRIX_SIZE] = {457, 241, 293, 463, 457, 149, 103, 191, 293, 367, 331, 239, 419, 389, 421, 281, 251, 359, 257, 397, 127, 173, 317, 331, 457, 419, 431, 277, 479, 409, 293, 281, 269, 409, 179, 127, 227, 409, 499, 463, 197, 419, 263, 331, 137, 487, 331, 173, 317};
int64_t matrix_X_0_1_0_1_1_0_1[MATRIX_SIZE * MATRIX_SIZE] = {137, 443, 241, 479, 191, 229, 127, 131, 127, 409, 179, 233, 457, 373, 337, 491, 151, 313, 139, 151, 467, 359, 127, 461, 293, 479, 419, 137, 293, 101, 127, 193, 419, 439, 167, 379, 191, 223, 439, 293, 113, 251, 229, 479, 307, 491, 293, 331, 277};
void generate_X_0_1_0_1_1_0(int64_t result[])
{
	int64_t value = 449;
	matrix_intmodmul(matrix_X_0_1_0_1_1_0_0, matrix_X_0_1_0_1_1_0_1, value, result);
}

void generate_X_0_1_0_1_1(int64_t result[])
{
	int64_t matrix_X_0_1_0_1_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_1_1_0(matrix_X_0_1_0_1_1_0);
	matrix_transpose(matrix_X_0_1_0_1_1_0, result);
}

void generate_X_0_1_0_1(int64_t result[])
{
	int64_t matrix_X_0_1_0_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_1_0(matrix_X_0_1_0_1_0);
	int64_t matrix_X_0_1_0_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_1_1(matrix_X_0_1_0_1_1);
	int64_t value = 269;
	matrix_intmodmul(matrix_X_0_1_0_1_0, matrix_X_0_1_0_1_1, value, result);
}

void generate_X_0_1_0(int64_t result[])
{
	int64_t matrix_X_0_1_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_0(matrix_X_0_1_0_0);
	int64_t matrix_X_0_1_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0_1(matrix_X_0_1_0_1);
	int64_t value = 223;
	matrix_intmodmul(matrix_X_0_1_0_0, matrix_X_0_1_0_1, value, result);
}

int64_t matrix_X_0_1_1_0_0_0_0[MATRIX_SIZE * MATRIX_SIZE] = {347, 401, 479, 173, 241, 293, 373, 397, 191, 149, 419, 431, 479, 127, 337, 443, 439, 163, 157, 211, 307, 431, 397, 151, 107, 389, 307, 307, 223, 317, 487, 137, 359, 499, 179, 269, 307, 277, 163, 499, 211, 487, 337, 311, 439, 457, 487, 223, 211};
void generate_X_0_1_1_0_0_0(int64_t result[])
{
	matrix_transpose(matrix_X_0_1_1_0_0_0_0, result);
}

int64_t matrix_X_0_1_1_0_0_1_0[MATRIX_SIZE * MATRIX_SIZE] = {257, 383, 127, 331, 223, 157, 197, 499, 241, 397, 431, 149, 307, 137, 211, 211, 409, 461, 449, 131, 149, 409, 281, 409, 163, 191, 233, 223, 373, 167, 419, 401, 457, 419, 373, 107, 107, 367, 251, 431, 293, 359, 293, 487, 229, 431, 163, 389, 499};
void generate_X_0_1_1_0_0_1(int64_t result[])
{
	int64_t value = 307;
	matrix_intmul(matrix_X_0_1_1_0_0_1_0, value, result);
}

void generate_X_0_1_1_0_0(int64_t result[])
{
	int64_t matrix_X_0_1_1_0_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_0_0_0(matrix_X_0_1_1_0_0_0);
	int64_t matrix_X_0_1_1_0_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_0_0_1(matrix_X_0_1_1_0_0_1);
	matrix_mul(matrix_X_0_1_1_0_0_0, matrix_X_0_1_1_0_0_1, result);
}

void generate_X_0_1_1_0(int64_t result[])
{
	int64_t matrix_X_0_1_1_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_0_0(matrix_X_0_1_1_0_0);
	int64_t value = 191;
	matrix_intmul(matrix_X_0_1_1_0_0, value, result);
}

int64_t matrix_X_0_1_1_1_0_0_0[MATRIX_SIZE * MATRIX_SIZE] = {197, 397, 307, 227, 283, 199, 157, 293, 149, 409, 163, 479, 347, 167, 479, 179, 211, 307, 113, 251, 487, 223, 277, 461, 397, 331, 487, 229, 223, 419, 443, 239, 491, 191, 331, 149, 193, 149, 467, 157, 337, 191, 347, 353, 239, 467, 347, 397, 233};
int64_t matrix_X_0_1_1_1_0_0_1[MATRIX_SIZE * MATRIX_SIZE] = {131, 307, 479, 191, 431, 227, 337, 199, 241, 263, 499, 439, 191, 163, 499, 211, 211, 239, 211, 487, 293, 307, 191, 379, 311, 499, 409, 227, 179, 307, 293, 331, 227, 157, 313, 331, 139, 241, 277, 241, 397, 367, 137, 151, 409, 211, 293, 409, 269};
void generate_X_0_1_1_1_0_0(int64_t result[])
{
	matrix_mul(matrix_X_0_1_1_1_0_0_0, matrix_X_0_1_1_1_0_0_1, result);
}

int64_t matrix_X_0_1_1_1_0_1_0[MATRIX_SIZE * MATRIX_SIZE] = {149, 229, 151, 131, 149, 419, 139, 347, 457, 251, 409, 211, 479, 173, 127, 431, 419, 367, 431, 307, 293, 487, 373, 257, 149, 251, 331, 307, 103, 127, 293, 419, 167, 499, 149, 227, 251, 191, 487, 251, 149, 191, 367, 281, 173, 421, 463, 461, 107};
void generate_X_0_1_1_1_0_1(int64_t result[])
{
	int64_t value = 443;
	matrix_intmod(matrix_X_0_1_1_1_0_1_0, value, result);
}

void generate_X_0_1_1_1_0(int64_t result[])
{
	int64_t matrix_X_0_1_1_1_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_1_0_0(matrix_X_0_1_1_1_0_0);
	int64_t matrix_X_0_1_1_1_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_1_0_1(matrix_X_0_1_1_1_0_1);
	matrix_xor(matrix_X_0_1_1_1_0_0, matrix_X_0_1_1_1_0_1, result);
}

int64_t matrix_X_0_1_1_1_1_0_0[MATRIX_SIZE * MATRIX_SIZE] = {223, 461, 337, 347, 137, 499, 317, 157, 397, 263, 383, 397, 431, 149, 373, 307, 449, 251, 347, 463, 467, 313, 383, 347, 409, 367, 389, 271, 257, 307, 479, 179, 367, 191, 281, 409, 449, 257, 461, 389, 347, 307, 487, 367, 439, 127, 179, 373, 163};
int64_t matrix_X_0_1_1_1_1_0_1[MATRIX_SIZE * MATRIX_SIZE] = {211, 239, 179, 127, 251, 157, 137, 311, 379, 211, 487, 503, 229, 239, 239, 127, 127, 127, 337, 347, 359, 239, 127, 283, 347, 479, 127, 137, 439, 349, 419, 271, 197, 263, 439, 151, 173, 149, 457, 401, 113, 223, 421, 251, 337, 331, 317, 191, 137};
void generate_X_0_1_1_1_1_0(int64_t result[])
{
	matrix_mul(matrix_X_0_1_1_1_1_0_0, matrix_X_0_1_1_1_1_0_1, result);
}

int64_t matrix_X_0_1_1_1_1_1_0[MATRIX_SIZE * MATRIX_SIZE] = {373, 347, 463, 263, 227, 449, 337, 499, 109, 479, 263, 277, 211, 397, 373, 311, 331, 457, 149, 241, 467, 269, 127, 443, 331, 431, 127, 479, 353, 277, 257, 293, 461, 251, 331, 277, 397, 269, 431, 479, 131, 163, 347, 257, 263, 137, 467, 379, 457};
int64_t matrix_X_0_1_1_1_1_1_1[MATRIX_SIZE * MATRIX_SIZE] = {127, 449, 197, 131, 457, 263, 397, 457, 127, 347, 257, 199, 277, 347, 331, 101, 439, 173, 337, 367, 293, 347, 293, 181, 293, 127, 233, 379, 317, 457, 503, 443, 317, 347, 157, 149, 223, 181, 307, 457, 211, 191, 163, 331, 449, 457, 337, 263, 283};
int64_t matrix_X_0_1_1_1_1_1_2[MATRIX_SIZE * MATRIX_SIZE] = {307, 503, 457, 331, 223, 307, 251, 431, 227, 479, 479, 113, 277, 359, 353, 149, 433, 367, 389, 499, 263, 199, 487, 157, 223, 433, 479, 263, 257, 479, 463, 127, 491, 347, 373, 281, 439, 107, 491, 167, 479, 479, 347, 443, 193, 191, 271, 307, 127};
void generate_X_0_1_1_1_1_1(int64_t result[])
{
	matrix_modmul(matrix_X_0_1_1_1_1_1_0, matrix_X_0_1_1_1_1_1_1, matrix_X_0_1_1_1_1_1_2, result);
}

void generate_X_0_1_1_1_1(int64_t result[])
{
	int64_t matrix_X_0_1_1_1_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_1_1_0(matrix_X_0_1_1_1_1_0);
	int64_t matrix_X_0_1_1_1_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_1_1_1(matrix_X_0_1_1_1_1_1);
	matrix_xor(matrix_X_0_1_1_1_1_0, matrix_X_0_1_1_1_1_1, result);
}

void generate_X_0_1_1_1(int64_t result[])
{
	int64_t matrix_X_0_1_1_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_1_0(matrix_X_0_1_1_1_0);
	int64_t matrix_X_0_1_1_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_1_1(matrix_X_0_1_1_1_1);
	int64_t value = 179;
	matrix_intmodmul(matrix_X_0_1_1_1_0, matrix_X_0_1_1_1_1, value, result);
}

void generate_X_0_1_1(int64_t result[])
{
	int64_t matrix_X_0_1_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_0(matrix_X_0_1_1_0);
	int64_t matrix_X_0_1_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1_1(matrix_X_0_1_1_1);
	matrix_sum(matrix_X_0_1_1_0, matrix_X_0_1_1_1, result);
}

void generate_X_0_1(int64_t result[])
{
	int64_t matrix_X_0_1_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_0(matrix_X_0_1_0);
	int64_t matrix_X_0_1_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1_1(matrix_X_0_1_1);
	int64_t value = 331;
	matrix_intmodmul(matrix_X_0_1_0, matrix_X_0_1_1, value, result);
}

void generate_X_0(int64_t result[])
{
	int64_t matrix_X_0_0[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_0(matrix_X_0_0);
	int64_t matrix_X_0_1[MATRIX_SIZE * MATRIX_SIZE];
	generate_X_0_1(matrix_X_0_1);
	matrix_xor(matrix_X_0_0, matrix_X_0_1, result);
}

/* 
* full expression
* xor(mul(mul(mul(intmul(intsum([[82, 117, 67, 84, 70, 95, 57], [52, 54, 56, 100, 57, 98, 50], [54, 97, 48, 98, 101, 52, 51], [57, 51, 55, 51, 55, 49, 100], [55, 57, 57, 52, 49, 49, 56], [101, 51, 53, 383, 331, 173, 359], [223, 331, 373, 337, 257, 127, 397]], 107), 457), transpose(mod([[457, 499, 331, 347, 307, 467, 137], [487, 223, 311, 457, 461, 499, 163], [191, 433, 337, 107, 223, 251, 163], [227, 359, 223, 251, 431, 151, 331], [223, 359, 457, 227, 149, 263, 307], [347, 419, 173, 347, 131, 191, 293], [137, 487, 421, 479, 449, 211, 439]], [[449, 293, 223, 239, 163, 191, 131], [331, 223, 163, 241, 307, 283, 227], [467, 283, 457, 359, 271, 269, 347], [347, 131, 389, 367, 397, 421, 353], [109, 409, 181, 293, 359, 251, 227], [227, 461, 331, 229, 211, 373, 281], [157, 359, 439, 241, 131, 409, 149]]))), mod(xor(mod([[157, 449, 251, 457, 487, 331, 139], [379, 107, 239, 383, 251, 467, 431], [223, 431, 397, 337, 271, 223, 293], [487, 227, 337, 353, 179, 409, 223], [419, 149, 191, 349, 479, 281, 449], [379, 479, 503, 199, 331, 367, 191], [293, 457, 487, 127, 127, 251, 409]], [[127, 197, 359, 347, 487, 439, 113], [401, 359, 113, 479, 281, 479, 463], [107, 397, 197, 337, 389, 173, 211], [331, 307, 373, 229, 131, 337, 307], [401, 293, 421, 307, 191, 449, 223], [263, 197, 149, 373, 263, 127, 307], [293, 499, 223, 331, 179, 431, 227]]), intxor([[379, 373, 401, 419, 257, 337, 367], [131, 409, 349, 223, 419, 251, 409], [461, 409, 163, 439, 269, 277, 499], [409, 307, 257, 157, 337, 127, 263], [151, 419, 277, 431, 503, 191, 257], [127, 397, 443, 277, 431, 457, 467], [137, 331, 227, 439, 167, 397, 463]], 211)), mul(transpose([[431, 127, 127, 131, 251, 251, 431], [173, 367, 457, 419, 311, 283, 131], [281, 157, 239, 227, 233, 257, 257], [211, 277, 127, 277, 191, 479, 457], [223, 251, 331, 331, 223, 113, 271], [191, 193, 337, 191, 317, 443, 127], [373, 401, 443, 293, 137, 431, 211]]), intmod([[257, 167, 131, 167, 487, 127, 367], [293, 307, 419, 499, 457, 419, 257], [463, 211, 449, 379, 439, 443, 431], [251, 293, 211, 337, 127, 491, 467], [263, 397, 317, 479, 157, 461, 227], [443, 487, 379, 431, 479, 409, 223], [421, 269, 457, 487, 283, 409, 389]], 211)))), intmod(mul(intmod(intxor([[173, 109, 331, 229, 251, 131, 131], [367, 263, 163, 379, 331, 359, 443], [113, 137, 251, 331, 307, 347, 461], [149, 487, 499, 449, 499, 331, 179], [397, 149, 491, 431, 419, 311, 181], [269, 223, 281, 127, 211, 311, 251], [307, 499, 479, 263, 107, 127, 353]], 307), 389), mul(mod([[397, 401, 379, 457, 157, 467, 311], [307, 443, 127, 269, 157, 211, 239], [419, 191, 337, 179, 127, 167, 223], [167, 257, 127, 479, 317, 239, 109], [173, 307, 337, 271, 389, 223, 211], [197, 461, 199, 307, 107, 131, 277], [173, 313, 461, 251, 293, 127, 457]], [[479, 233, 457, 113, 229, 457, 107], [359, 439, 419, 223, 449, 379, 397], [223, 127, 431, 449, 331, 163, 251], [331, 211, 173, 211, 211, 269, 331], [419, 419, 367, 439, 431, 127, 239], [439, 179, 487, 389, 251, 167, 311], [229, 223, 103, 449, 293, 367, 149]]), intmodmul([[491, 421, 113, 179, 479, 439, 257], [331, 211, 251, 433, 179, 127, 367], [191, 431, 397, 149, 463, 479, 137], [131, 419, 127, 479, 223, 479, 389], [487, 307, 223, 149, 277, 439, 271], [293, 107, 419, 487, 271, 307, 419], [127, 317, 307, 487, 127, 347, 127]], [[239, 233, 251, 419, 379, 389, 127], [349, 491, 211, 311, 401, 257, 233], [181, 367, 127, 409, 353, 293, 491], [373, 137, 283, 373, 211, 367, 307], [257, 191, 281, 293, 433, 223, 257], [499, 431, 367, 163, 227, 179, 397], [307, 149, 383, 367, 251, 157, 131]], 127))), 331)), intmodmul(intmodmul(intmul(intmodmul(intmod([[457, 103, 149, 449, 313, 479, 149], [409, 379, 307, 127, 499, 311, 431], [281, 347, 229, 367, 379, 457, 389], [127, 307, 397, 349, 211, 401, 359], [281, 331, 383, 293, 211, 269, 139], [251, 127, 353, 277, 257, 373, 419], [347, 241, 317, 487, 163, 419, 223]], 269), intmod([[467, 337, 487, 389, 479, 331, 467], [103, 233, 419, 257, 367, 223, 227], [293, 223, 349, 367, 211, 379, 331], [271, 347, 251, 431, 307, 191, 151], [337, 307, 257, 251, 167, 383, 127], [113, 487, 307, 277, 487, 311, 167], [127, 419, 331, 173, 263, 353, 179]], 397), 239), 389), intmodmul(intmul(mul([[479, 127, 251, 283, 347, 499, 223], [439, 311, 223, 443, 191, 157, 167], [307, 251, 419, 389, 271, 419, 311], [179, 239, 127, 277, 457, 419, 487], [401, 331, 197, 257, 163, 293, 401], [401, 397, 461, 337, 223, 293, 277], [409, 307, 157, 467, 163, 269, 257]], [[149, 173, 491, 293, 167, 347, 401], [269, 293, 397, 331, 307, 233, 449], [131, 457, 223, 283, 167, 439, 251], [307, 487, 479, 127, 479, 113, 379], [173, 331, 149, 191, 317, 167, 113], [179, 313, 127, 107, 197, 109, 179], [211, 457, 157, 127, 479, 233, 293]]), 307), transpose(intmodmul([[457, 241, 293, 463, 457, 149, 103], [191, 293, 367, 331, 239, 419, 389], [421, 281, 251, 359, 257, 397, 127], [173, 317, 331, 457, 419, 431, 277], [479, 409, 293, 281, 269, 409, 179], [127, 227, 409, 499, 463, 197, 419], [263, 331, 137, 487, 331, 173, 317]], [[137, 443, 241, 479, 191, 229, 127], [131, 127, 409, 179, 233, 457, 373], [337, 491, 151, 313, 139, 151, 467], [359, 127, 461, 293, 479, 419, 137], [293, 101, 127, 193, 419, 439, 167], [379, 191, 223, 439, 293, 113, 251], [229, 479, 307, 491, 293, 331, 277]], 449)), 269), 223), sum(intmul(mul(transpose([[347, 401, 479, 173, 241, 293, 373], [397, 191, 149, 419, 431, 479, 127], [337, 443, 439, 163, 157, 211, 307], [431, 397, 151, 107, 389, 307, 307], [223, 317, 487, 137, 359, 499, 179], [269, 307, 277, 163, 499, 211, 487], [337, 311, 439, 457, 487, 223, 211]]), intmul([[257, 383, 127, 331, 223, 157, 197], [499, 241, 397, 431, 149, 307, 137], [211, 211, 409, 461, 449, 131, 149], [409, 281, 409, 163, 191, 233, 223], [373, 167, 419, 401, 457, 419, 373], [107, 107, 367, 251, 431, 293, 359], [293, 487, 229, 431, 163, 389, 499]], 307)), 191), intmodmul(xor(mul([[197, 397, 307, 227, 283, 199, 157], [293, 149, 409, 163, 479, 347, 167], [479, 179, 211, 307, 113, 251, 487], [223, 277, 461, 397, 331, 487, 229], [223, 419, 443, 239, 491, 191, 331], [149, 193, 149, 467, 157, 337, 191], [347, 353, 239, 467, 347, 397, 233]], [[131, 307, 479, 191, 431, 227, 337], [199, 241, 263, 499, 439, 191, 163], [499, 211, 211, 239, 211, 487, 293], [307, 191, 379, 311, 499, 409, 227], [179, 307, 293, 331, 227, 157, 313], [331, 139, 241, 277, 241, 397, 367], [137, 151, 409, 211, 293, 409, 269]]), intmod([[149, 229, 151, 131, 149, 419, 139], [347, 457, 251, 409, 211, 479, 173], [127, 431, 419, 367, 431, 307, 293], [487, 373, 257, 149, 251, 331, 307], [103, 127, 293, 419, 167, 499, 149], [227, 251, 191, 487, 251, 149, 191], [367, 281, 173, 421, 463, 461, 107]], 443)), xor(mul([[223, 461, 337, 347, 137, 499, 317], [157, 397, 263, 383, 397, 431, 149], [373, 307, 449, 251, 347, 463, 467], [313, 383, 347, 409, 367, 389, 271], [257, 307, 479, 179, 367, 191, 281], [409, 449, 257, 461, 389, 347, 307], [487, 367, 439, 127, 179, 373, 163]], [[211, 239, 179, 127, 251, 157, 137], [311, 379, 211, 487, 503, 229, 239], [239, 127, 127, 127, 337, 347, 359], [239, 127, 283, 347, 479, 127, 137], [439, 349, 419, 271, 197, 263, 439], [151, 173, 149, 457, 401, 113, 223], [421, 251, 337, 331, 317, 191, 137]]), modmul([[373, 347, 463, 263, 227, 449, 337], [499, 109, 479, 263, 277, 211, 397], [373, 311, 331, 457, 149, 241, 467], [269, 127, 443, 331, 431, 127, 479], [353, 277, 257, 293, 461, 251, 331], [277, 397, 269, 431, 479, 131, 163], [347, 257, 263, 137, 467, 379, 457]], [[127, 449, 197, 131, 457, 263, 397], [457, 127, 347, 257, 199, 277, 347], [331, 101, 439, 173, 337, 367, 293], [347, 293, 181, 293, 127, 233, 379], [317, 457, 503, 443, 317, 347, 157], [149, 223, 181, 307, 457, 211, 191], [163, 331, 449, 457, 337, 263, 283]], [[307, 503, 457, 331, 223, 307, 251], [431, 227, 479, 479, 113, 277, 359], [353, 149, 433, 367, 389, 499, 263], [199, 487, 157, 223, 433, 479, 263], [257, 479, 463, 127, 491, 347, 373], [281, 439, 107, 491, 167, 479, 479], [347, 443, 193, 191, 271, 307, 127]])), 179)), 331))
*/


/* 
* short expression
* xor(mul(mul(mul(intmul(intsum(FLAG, 107), 457), [[8, 156, 191, 227, 5, 120, 137], [206, 0, 150, 97, 359, 419, 128], [108, 148, 337, 223, 95, 173, 421], [108, 216, 107, 251, 227, 118, 238], [144, 154, 223, 34, 149, 131, 56], [85, 216, 251, 151, 12, 191, 211], [6, 163, 163, 331, 80, 12, 141]]), [[438, 401, 441, 286, 466, 201, 422], [299, 289, 387, 371, 395, 507, 229], [279, 360, 115, 356, 209, 500, 370], [470, 259, 131, 50, 434, 228, 267], [86, 485, 377, 342, 325, 373, 465], [216, 267, 336, 257, 312, 363, 447], [90, 81, 25, 283, 11, 421, 426]]), [[150, 131, 134, 287, 67, 296, 120], [163, 142, 252, 247, 109, 308, 79], [180, 78, 92, 243, 90, 172, 302], [84, 73, 261, 170, 259, 90, 278], [151, 132, 286, 190, 270, 264, 162], [326, 57, 240, 32, 73, 173, 63], [283, 234, 24, 200, 20, 26, 76]]), [[160, 285, 288, 296, 26, 287, 210], [196, 128, 206, 172, 221, 249, 21], [139, 9, 211, 75, 35, 41, 204], [129, 175, 151, 315, 216, 266, 105], [326, 240, 18, 300, 91, 0, 160], [24, 181, 155, 118, 231, 177, 214], [17, 72, 131, 49, 161, 121, 196]]) == [[290888103644444, 178600379643039, 263179540638506, 268259706947235, 174144251600533, 262858580338608, 205241886454390], [266543361129817, 163444543477235, 241345694833576, 245517417594260, 159576440370473, 240978406999322, 187832706871601], [274532229421163, 168658690466143, 248631701779728, 253557989053501, 164633687948068, 248412416015924, 194100755501460], [251614091202831, 154365949050235, 227950135099191, 231865718732332, 150629619670187, 227840804131886, 177049014854034], [245377456195920, 150545871988258, 222104297713758, 226054314236169, 146825328497910, 221826841236393, 172789715210708], [459871309984406, 282172549588591, 418800812248283, 425479453483080, 277072150491577, 419512665528703, 325145516934452], [617868640305811, 379497156729910, 558940671366503, 569471973434373, 369496860933163, 558513013131251, 434722142744998]]
*/


/* 
* exploit data

matrix_xor
matrix_mul
matrix_mul
matrix_mul
matrix_intmul
matrix_intsum
FLAG
107
457
[[8, 156, 191, 227, 5, 120, 137], [206, 0, 150, 97, 359, 419, 128], [108, 148, 337, 223, 95, 173, 421], [108, 216, 107, 251, 227, 118, 238], [144, 154, 223, 34, 149, 131, 56], [85, 216, 251, 151, 12, 191, 211], [6, 163, 163, 331, 80, 12, 141]]
[[438, 401, 441, 286, 466, 201, 422], [299, 289, 387, 371, 395, 507, 229], [279, 360, 115, 356, 209, 500, 370], [470, 259, 131, 50, 434, 228, 267], [86, 485, 377, 342, 325, 373, 465], [216, 267, 336, 257, 312, 363, 447], [90, 81, 25, 283, 11, 421, 426]]
[[150, 131, 134, 287, 67, 296, 120], [163, 142, 252, 247, 109, 308, 79], [180, 78, 92, 243, 90, 172, 302], [84, 73, 261, 170, 259, 90, 278], [151, 132, 286, 190, 270, 264, 162], [326, 57, 240, 32, 73, 173, 63], [283, 234, 24, 200, 20, 26, 76]]
[[160, 285, 288, 296, 26, 287, 210], [196, 128, 206, 172, 221, 249, 21], [139, 9, 211, 75, 35, 41, 204], [129, 175, 151, 315, 216, 266, 105], [326, 240, 18, 300, 91, 0, 160], [24, 181, 155, 118, 231, 177, 214], [17, 72, 131, 49, 161, 121, 196]]

*/

